/* 
 * AYLIEN News API
 *
 * The AYLIEN News API is the most powerful way of sourcing, searching and syndicating analyzed and enriched news content. It is accessed by sending HTTP requests to our server, which returns information to your client. 
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@aylien.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp.Portable;
using Aylien.NewsApi.Client;
using Aylien.NewsApi.Model;

namespace Aylien.NewsApi.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IDefaultApi : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// List autocompletes
        /// </summary>
        /// <remarks>
        /// The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Autocompletes</returns>
        Autocompletes ListAutocompletes (string type, string term, string language = default(string), int? perPage = default(int?));

        /// <summary>
        /// List autocompletes
        /// </summary>
        /// <remarks>
        /// The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of Autocompletes</returns>
        ApiResponse<Autocompletes> ListAutocompletesWithHttpInfo (string type, string term, string language = default(string), int? perPage = default(int?));
        /// <summary>
        /// List Clusters
        /// </summary>
        /// <remarks>
        /// The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Clusters</returns>
        Clusters ListClusters (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>));

        /// <summary>
        /// List Clusters
        /// </summary>
        /// <remarks>
        /// The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>ApiResponse of Clusters</returns>
        ApiResponse<Clusters> ListClustersWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>));
        /// <summary>
        /// List coverages
        /// </summary>
        /// <remarks>
        /// The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Coverages</returns>
        Coverages ListCoverages (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?));

        /// <summary>
        /// List coverages
        /// </summary>
        /// <remarks>
        /// The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of Coverages</returns>
        ApiResponse<Coverages> ListCoveragesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?));
        /// <summary>
        /// List histograms
        /// </summary>
        /// <remarks>
        /// For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Histograms</returns>
        Histograms ListHistograms (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string));

        /// <summary>
        /// List histograms
        /// </summary>
        /// <remarks>
        /// For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>ApiResponse of Histograms</returns>
        ApiResponse<Histograms> ListHistogramsWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string));
        /// <summary>
        /// List related stories
        /// </summary>
        /// <remarks>
        /// This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>RelatedStories</returns>
        RelatedStories ListRelatedStories (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?));

        /// <summary>
        /// List related stories
        /// </summary>
        /// <remarks>
        /// This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of RelatedStories</returns>
        ApiResponse<RelatedStories> ListRelatedStoriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?));
        /// <summary>
        /// List Stories
        /// </summary>
        /// <remarks>
        /// The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Stories</returns>
        Stories ListStories (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?));

        /// <summary>
        /// List Stories
        /// </summary>
        /// <remarks>
        /// The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>ApiResponse of Stories</returns>
        ApiResponse<Stories> ListStoriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?));
        /// <summary>
        /// List time series
        /// </summary>
        /// <remarks>
        /// The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>TimeSeriesList</returns>
        TimeSeriesList ListTimeSeries (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string));

        /// <summary>
        /// List time series
        /// </summary>
        /// <remarks>
        /// The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>ApiResponse of TimeSeriesList</returns>
        ApiResponse<TimeSeriesList> ListTimeSeriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string));
        /// <summary>
        /// List trends
        /// </summary>
        /// <remarks>
        /// The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Trends</returns>
        Trends ListTrends (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?));

        /// <summary>
        /// List trends
        /// </summary>
        /// <remarks>
        /// The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>ApiResponse of Trends</returns>
        ApiResponse<Trends> ListTrendsWithHttpInfo (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?));
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// List autocompletes
        /// </summary>
        /// <remarks>
        /// The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of Autocompletes</returns>
        System.Threading.Tasks.Task<Autocompletes> ListAutocompletesAsync (string type, string term, string language = default(string), int? perPage = default(int?));

        /// <summary>
        /// List autocompletes
        /// </summary>
        /// <remarks>
        /// The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (Autocompletes)</returns>
        System.Threading.Tasks.Task<ApiResponse<Autocompletes>> ListAutocompletesAsyncWithHttpInfo (string type, string term, string language = default(string), int? perPage = default(int?));
        /// <summary>
        /// List Clusters
        /// </summary>
        /// <remarks>
        /// The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Task of Clusters</returns>
        System.Threading.Tasks.Task<Clusters> ListClustersAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>));

        /// <summary>
        /// List Clusters
        /// </summary>
        /// <remarks>
        /// The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Task of ApiResponse (Clusters)</returns>
        System.Threading.Tasks.Task<ApiResponse<Clusters>> ListClustersAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>));
        /// <summary>
        /// List coverages
        /// </summary>
        /// <remarks>
        /// The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of Coverages</returns>
        System.Threading.Tasks.Task<Coverages> ListCoveragesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?));

        /// <summary>
        /// List coverages
        /// </summary>
        /// <remarks>
        /// The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (Coverages)</returns>
        System.Threading.Tasks.Task<ApiResponse<Coverages>> ListCoveragesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?));
        /// <summary>
        /// List histograms
        /// </summary>
        /// <remarks>
        /// For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Task of Histograms</returns>
        System.Threading.Tasks.Task<Histograms> ListHistogramsAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string));

        /// <summary>
        /// List histograms
        /// </summary>
        /// <remarks>
        /// For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Task of ApiResponse (Histograms)</returns>
        System.Threading.Tasks.Task<ApiResponse<Histograms>> ListHistogramsAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string));
        /// <summary>
        /// List related stories
        /// </summary>
        /// <remarks>
        /// This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of RelatedStories</returns>
        System.Threading.Tasks.Task<RelatedStories> ListRelatedStoriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?));

        /// <summary>
        /// List related stories
        /// </summary>
        /// <remarks>
        /// This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (RelatedStories)</returns>
        System.Threading.Tasks.Task<ApiResponse<RelatedStories>> ListRelatedStoriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?));
        /// <summary>
        /// List Stories
        /// </summary>
        /// <remarks>
        /// The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Task of Stories</returns>
        System.Threading.Tasks.Task<Stories> ListStoriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?));

        /// <summary>
        /// List Stories
        /// </summary>
        /// <remarks>
        /// The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Task of ApiResponse (Stories)</returns>
        System.Threading.Tasks.Task<ApiResponse<Stories>> ListStoriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?));
        /// <summary>
        /// List time series
        /// </summary>
        /// <remarks>
        /// The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>Task of TimeSeriesList</returns>
        System.Threading.Tasks.Task<TimeSeriesList> ListTimeSeriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string));

        /// <summary>
        /// List time series
        /// </summary>
        /// <remarks>
        /// The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>Task of ApiResponse (TimeSeriesList)</returns>
        System.Threading.Tasks.Task<ApiResponse<TimeSeriesList>> ListTimeSeriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string));
        /// <summary>
        /// List trends
        /// </summary>
        /// <remarks>
        /// The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Task of Trends</returns>
        System.Threading.Tasks.Task<Trends> ListTrendsAsync (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?));

        /// <summary>
        /// List trends
        /// </summary>
        /// <remarks>
        /// The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </remarks>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Task of ApiResponse (Trends)</returns>
        System.Threading.Tasks.Task<ApiResponse<Trends>> ListTrendsAsyncWithHttpInfo (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class DefaultApi : IDefaultApi
    {
        private Aylien.NewsApi.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class.
        /// </summary>
        /// <returns></returns>
        public DefaultApi(String basePath)
        {
            this.Configuration = new Aylien.NewsApi.Client.Configuration { BasePath = basePath };

            ExceptionFactory = Aylien.NewsApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// </summary>
        /// <returns></returns>
        public DefaultApi()
        {
            this.Configuration = Aylien.NewsApi.Client.Configuration.Default;

            ExceptionFactory = Aylien.NewsApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DefaultApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public DefaultApi(Aylien.NewsApi.Client.Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Aylien.NewsApi.Client.Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = Aylien.NewsApi.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Aylien.NewsApi.Client.Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Aylien.NewsApi.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public IDictionary<String, String> DefaultHeader()
        {
            return new ReadOnlyDictionary<string, string>(this.Configuration.DefaultHeader);
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// List autocompletes The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Autocompletes</returns>
        public Autocompletes ListAutocompletes (string type, string term, string language = default(string), int? perPage = default(int?))
        {
             ApiResponse<Autocompletes> localVarResponse = ListAutocompletesWithHttpInfo(type, term, language, perPage);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List autocompletes The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of Autocompletes</returns>
        public ApiResponse<Autocompletes> ListAutocompletesWithHttpInfo (string type, string term, string language = default(string), int? perPage = default(int?))
        {
            // verify the required parameter 'type' is set
            if (type == null)
                throw new ApiException(400, "Missing required parameter 'type' when calling DefaultApi->ListAutocompletes");
            // verify the required parameter 'term' is set
            if (term == null)
                throw new ApiException(400, "Missing required parameter 'term' when calling DefaultApi->ListAutocompletes");

            var localVarPath = "./autocompletes";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (type != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "type", type)); // query parameter
            if (term != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "term", term)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "language", language)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListAutocompletes", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Autocompletes>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Autocompletes) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Autocompletes)));
        }

        /// <summary>
        /// List autocompletes The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of Autocompletes</returns>
        public async System.Threading.Tasks.Task<Autocompletes> ListAutocompletesAsync (string type, string term, string language = default(string), int? perPage = default(int?))
        {
             ApiResponse<Autocompletes> localVarResponse = await ListAutocompletesAsyncWithHttpInfo(type, term, language, perPage);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List autocompletes The autocompletes endpoint a string of characters provided to it, and then returns suggested terms that are the most likely full words or strings. The terms returned by the News API are based on parameters the type parameters you can see below. For example, if you provide the autocompletes endpoint with the term &#x60;New York C&#x60; and select the type &#x60;dbpedia_resources&#x60;, the API will return links to the DBpedia resources &#x60;New_York_City&#x60;, &#x60;New_York_City_Subway&#x60;, &#x60;New_York_City_Police_Department&#x60;, and so on. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="type">This parameter is used for defining the type of autocompletes. </param>
        /// <param name="term">This parameter is used for finding autocomplete objects that contain the specified value. </param>
        /// <param name="language">This parameter is used for autocompletes whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to en)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (Autocompletes)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Autocompletes>> ListAutocompletesAsyncWithHttpInfo (string type, string term, string language = default(string), int? perPage = default(int?))
        {
            // verify the required parameter 'type' is set
            if (type == null)
                throw new ApiException(400, "Missing required parameter 'type' when calling DefaultApi->ListAutocompletes");
            // verify the required parameter 'term' is set
            if (term == null)
                throw new ApiException(400, "Missing required parameter 'term' when calling DefaultApi->ListAutocompletes");

            var localVarPath = "./autocompletes";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (type != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "type", type)); // query parameter
            if (term != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "term", term)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "language", language)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListAutocompletes", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Autocompletes>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Autocompletes) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Autocompletes)));
        }

        /// <summary>
        /// List Clusters The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Clusters</returns>
        public Clusters ListClusters (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>))
        {
             ApiResponse<Clusters> localVarResponse = ListClustersWithHttpInfo(id, notId, storyCountMin, storyCountMax, timeStart, timeEnd, earliestStoryStart, earliestStoryEnd, latestStoryStart, latestStoryEnd, locationCountry, notLocationCountry);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Clusters The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>ApiResponse of Clusters</returns>
        public ApiResponse<Clusters> ListClustersWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>))
        {

            var localVarPath = "./clusters";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (storyCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_count.min", storyCountMin)); // query parameter
            if (storyCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_count.max", storyCountMax)); // query parameter
            if (timeStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "time.start", timeStart)); // query parameter
            if (timeEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "time.end", timeEnd)); // query parameter
            if (earliestStoryStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "earliest_story.start", earliestStoryStart)); // query parameter
            if (earliestStoryEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "earliest_story.end", earliestStoryEnd)); // query parameter
            if (latestStoryStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "latest_story.start", latestStoryStart)); // query parameter
            if (latestStoryEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "latest_story.end", latestStoryEnd)); // query parameter
            if (locationCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "location.country", locationCountry)); // query parameter
            if (notLocationCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!location.country", notLocationCountry)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListClusters", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Clusters>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Clusters) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Clusters)));
        }

        /// <summary>
        /// List Clusters The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Task of Clusters</returns>
        public async System.Threading.Tasks.Task<Clusters> ListClustersAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>))
        {
             ApiResponse<Clusters> localVarResponse = await ListClustersAsyncWithHttpInfo(id, notId, storyCountMin, storyCountMax, timeStart, timeEnd, earliestStoryStart, earliestStoryEnd, latestStoryStart, latestStoryEnd, locationCountry, notLocationCountry);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Clusters The clusters endpoint is used to return clusters based on parameters you set in your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding clusters by cluster id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding clusters by cluster id.  (optional)</param>
        /// <param name="storyCountMin">This parameter is used for finding clusters with more than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="storyCountMax">This parameter is used for finding clusters with less than or equal to a specific amount of stories associated with them.  (optional)</param>
        /// <param name="timeStart">This parameter is used for finding clusters whose creation time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="timeEnd">This parameter is used for finding clusters whose creation time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryStart">This parameter is used for finding clusters whose publication date of its earliest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="earliestStoryEnd">This parameter is used for finding clusters whose publication date of its earliest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryStart">This parameter is used for finding clusters whose publication date of its latest story is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="latestStoryEnd">This parameter is used for finding clusters whose publication date of its latest story is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="locationCountry">This parameter is used for finding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notLocationCountry">This parameter is used for excluding clusters belonging to a specific country. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <returns>Task of ApiResponse (Clusters)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Clusters>> ListClustersAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), int? storyCountMin = default(int?), int? storyCountMax = default(int?), string timeStart = default(string), string timeEnd = default(string), string earliestStoryStart = default(string), string earliestStoryEnd = default(string), string latestStoryStart = default(string), string latestStoryEnd = default(string), List<string> locationCountry = default(List<string>), List<string> notLocationCountry = default(List<string>))
        {

            var localVarPath = "./clusters";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (storyCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_count.min", storyCountMin)); // query parameter
            if (storyCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_count.max", storyCountMax)); // query parameter
            if (timeStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "time.start", timeStart)); // query parameter
            if (timeEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "time.end", timeEnd)); // query parameter
            if (earliestStoryStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "earliest_story.start", earliestStoryStart)); // query parameter
            if (earliestStoryEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "earliest_story.end", earliestStoryEnd)); // query parameter
            if (latestStoryStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "latest_story.start", latestStoryStart)); // query parameter
            if (latestStoryEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "latest_story.end", latestStoryEnd)); // query parameter
            if (locationCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "location.country", locationCountry)); // query parameter
            if (notLocationCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!location.country", notLocationCountry)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListClusters", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Clusters>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Clusters) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Clusters)));
        }

        /// <summary>
        /// List coverages The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Coverages</returns>
        public Coverages ListCoverages (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?))
        {
             ApiResponse<Coverages> localVarResponse = ListCoveragesWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, storyId, storyUrl, storyTitle, storyBody, storyPublishedAt, storyLanguage, perPage);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List coverages The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of Coverages</returns>
        public ApiResponse<Coverages> ListCoveragesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./coverages";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (storyId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_id", storyId)); // query parameter
            if (storyUrl != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_url", storyUrl)); // query parameter
            if (storyTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_title", storyTitle)); // query parameter
            if (storyBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_body", storyBody)); // query parameter
            if (storyPublishedAt != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_published_at", storyPublishedAt)); // query parameter
            if (storyLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_language", storyLanguage)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCoverages", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Coverages>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Coverages) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Coverages)));
        }

        /// <summary>
        /// List coverages The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of Coverages</returns>
        public async System.Threading.Tasks.Task<Coverages> ListCoveragesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?))
        {
             ApiResponse<Coverages> localVarResponse = await ListCoveragesAsyncWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, storyId, storyUrl, storyTitle, storyBody, storyPublishedAt, storyLanguage, perPage);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List coverages The coverages endpoint allows you to understand the reach a document has had. For example, you can track the coverage of a press release or a Tweet based on how many times it has been mentioned in stories. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="storyPublishedAt">Publish date of the article. If you use a url or title and body of an article for getting coverages, this parameter is required. The format used is a restricted form of the canonical representation of dateTime in the [XML Schema specification (ISO 8601)](https://www.w3.org/TR/xmlschema-2/#dateTime).  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (Coverages)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Coverages>> ListCoveragesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), DateTime? storyPublishedAt = default(DateTime?), string storyLanguage = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./coverages";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (storyId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_id", storyId)); // query parameter
            if (storyUrl != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_url", storyUrl)); // query parameter
            if (storyTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_title", storyTitle)); // query parameter
            if (storyBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_body", storyBody)); // query parameter
            if (storyPublishedAt != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_published_at", storyPublishedAt)); // query parameter
            if (storyLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_language", storyLanguage)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListCoverages", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Coverages>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Coverages) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Coverages)));
        }

        /// <summary>
        /// List histograms For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Histograms</returns>
        public Histograms ListHistograms (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string))
        {
             ApiResponse<Histograms> localVarResponse = ListHistogramsWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, intervalStart, intervalEnd, intervalWidth, field);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List histograms For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>ApiResponse of Histograms</returns>
        public ApiResponse<Histograms> ListHistogramsWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string))
        {

            var localVarPath = "./histograms";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (intervalStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.start", intervalStart)); // query parameter
            if (intervalEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.end", intervalEnd)); // query parameter
            if (intervalWidth != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.width", intervalWidth)); // query parameter
            if (field != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "field", field)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListHistograms", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Histograms>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Histograms) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Histograms)));
        }

        /// <summary>
        /// List histograms For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Task of Histograms</returns>
        public async System.Threading.Tasks.Task<Histograms> ListHistogramsAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string))
        {
             ApiResponse<Histograms> localVarResponse = await ListHistogramsAsyncWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, intervalStart, intervalEnd, intervalWidth, field);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List histograms For the numerical metadata that the News API gathers (such as word counts or social shares for example), you can use the histograms endpoint to access and display this information. As this endpoint does not return actual stories, the results you are given will not count towards your story allowance provided by your subscription, so you can effectively query this endpoint free of charge. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="intervalStart">This parameter is used for setting the start data point of histogram intervals.  (optional)</param>
        /// <param name="intervalEnd">This parameter is used for setting the end data point of histogram intervals.  (optional)</param>
        /// <param name="intervalWidth">This parameter is used for setting the width of histogram intervals.  (optional)</param>
        /// <param name="field">This parameter is used for specifying the y-axis variable for the histogram.  (optional, default to social_shares_count)</param>
        /// <returns>Task of ApiResponse (Histograms)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Histograms>> ListHistogramsAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), int? intervalStart = default(int?), int? intervalEnd = default(int?), int? intervalWidth = default(int?), string field = default(string))
        {

            var localVarPath = "./histograms";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (intervalStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.start", intervalStart)); // query parameter
            if (intervalEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.end", intervalEnd)); // query parameter
            if (intervalWidth != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "interval.width", intervalWidth)); // query parameter
            if (field != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "field", field)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListHistograms", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Histograms>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Histograms) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Histograms)));
        }

        /// <summary>
        /// List related stories This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>RelatedStories</returns>
        public RelatedStories ListRelatedStories (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?))
        {
             ApiResponse<RelatedStories> localVarResponse = ListRelatedStoriesWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, storyId, storyUrl, storyTitle, storyBody, boostBy, storyLanguage, perPage);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List related stories This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>ApiResponse of RelatedStories</returns>
        public ApiResponse<RelatedStories> ListRelatedStoriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./related_stories";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (storyId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_id", storyId)); // query parameter
            if (storyUrl != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_url", storyUrl)); // query parameter
            if (storyTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_title", storyTitle)); // query parameter
            if (storyBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_body", storyBody)); // query parameter
            if (boostBy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "boost_by", boostBy)); // query parameter
            if (storyLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_language", storyLanguage)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListRelatedStories", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RelatedStories>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (RelatedStories) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RelatedStories)));
        }

        /// <summary>
        /// List related stories This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of RelatedStories</returns>
        public async System.Threading.Tasks.Task<RelatedStories> ListRelatedStoriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?))
        {
             ApiResponse<RelatedStories> localVarResponse = await ListRelatedStoriesAsyncWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, storyId, storyUrl, storyTitle, storyBody, boostBy, storyLanguage, perPage);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List related stories This endpoint is used for finding semantically similar stories based on the parameters you provide as inputs. For example, if you want to find stories similar to a Tweet or any text extract you input, the related stories endpoint will analyze the entities present and the meaning of the text, and find stories with a similar meaning. The maximum number of related stories returned is 100. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="storyId">A story id (optional)</param>
        /// <param name="storyUrl">An article or webpage (optional)</param>
        /// <param name="storyTitle">Title of the article (optional)</param>
        /// <param name="storyBody">Body of the article (optional)</param>
        /// <param name="boostBy">This parameter is used for boosting the result by the specified value.  (optional)</param>
        /// <param name="storyLanguage">This parameter is used for setting the language of the story. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional, default to auto)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page.  (optional, default to 3)</param>
        /// <returns>Task of ApiResponse (RelatedStories)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<RelatedStories>> ListRelatedStoriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), long? storyId = default(long?), string storyUrl = default(string), string storyTitle = default(string), string storyBody = default(string), string boostBy = default(string), string storyLanguage = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./related_stories";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (storyId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_id", storyId)); // query parameter
            if (storyUrl != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_url", storyUrl)); // query parameter
            if (storyTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_title", storyTitle)); // query parameter
            if (storyBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_body", storyBody)); // query parameter
            if (boostBy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "boost_by", boostBy)); // query parameter
            if (storyLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "story_language", storyLanguage)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListRelatedStories", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<RelatedStories>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (RelatedStories) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(RelatedStories)));
        }

        /// <summary>
        /// List Stories The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Stories</returns>
        public Stories ListStories (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?))
        {
             ApiResponse<Stories> localVarResponse = ListStoriesWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, language, notLanguage, linksPermalink, notLinksPermalink, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, sortBy, sortDirection, cursor, perPage);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List Stories The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>ApiResponse of Stories</returns>
        public ApiResponse<Stories> ListStoriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./stories";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (sortBy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_by", sortBy)); // query parameter
            if (sortDirection != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_direction", sortDirection)); // query parameter
            if (cursor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "cursor", cursor)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListStories", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Stories>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Stories) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Stories)));
        }

        /// <summary>
        /// List Stories The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Task of Stories</returns>
        public async System.Threading.Tasks.Task<Stories> ListStoriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?))
        {
             ApiResponse<Stories> localVarResponse = await ListStoriesAsyncWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, language, notLanguage, linksPermalink, notLinksPermalink, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, clusters, _return, sortBy, sortDirection, cursor, perPage);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List Stories The stories endpoint is used to return stories based on parameters you set in your query. The News API crawler gathers articles in near real-time and stores information about them, or metadata. Below you can see all of the query parameters, which you can use to narrow down your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="clusters">This parameter is used for finding stories with belonging to one of clusters in a specific set of clusters You can read more about working with clustering [here](https://newsapi.aylien.com/docs/working-with-clustering).  (optional)</param>
        /// <param name="_return">This parameter is used for specifying return fields. (optional)</param>
        /// <param name="sortBy">This parameter is used for changing the order column of the results. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to published_at)</param>
        /// <param name="sortDirection">This parameter is used for changing the order direction of the result. You can read about sorting results [here](https://newsapi.aylien.com/docs/sorting-results).  (optional, default to desc)</param>
        /// <param name="cursor">This parameter is used for finding a specific page. You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results).  (optional, default to &quot;*&quot;)</param>
        /// <param name="perPage">This parameter is used for specifying number of items in each page You can read more about pagination of results [here](https://newsapi.aylien.com/docs/pagination-of-results)  (optional, default to 10)</param>
        /// <returns>Task of ApiResponse (Stories)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Stories>> ListStoriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), List<string> clusters = default(List<string>), List<string> _return = default(List<string>), string sortBy = default(string), string sortDirection = default(string), string cursor = default(string), int? perPage = default(int?))
        {

            var localVarPath = "./stories";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (clusters != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "clusters[]", clusters)); // query parameter
            if (_return != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "return[]", _return)); // query parameter
            if (sortBy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_by", sortBy)); // query parameter
            if (sortDirection != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sort_direction", sortDirection)); // query parameter
            if (cursor != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "cursor", cursor)); // query parameter
            if (perPage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "per_page", perPage)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListStories", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Stories>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Stories) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Stories)));
        }

        /// <summary>
        /// List time series The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>TimeSeriesList</returns>
        public TimeSeriesList ListTimeSeries (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string))
        {
             ApiResponse<TimeSeriesList> localVarResponse = ListTimeSeriesWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, language, notLanguage, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, publishedAtStart, publishedAtEnd, period);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List time series The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>ApiResponse of TimeSeriesList</returns>
        public ApiResponse<TimeSeriesList> ListTimeSeriesWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string))
        {

            var localVarPath = "./time_series";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (period != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "period", period)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListTimeSeries", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<TimeSeriesList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (TimeSeriesList) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(TimeSeriesList)));
        }

        /// <summary>
        /// List time series The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>Task of TimeSeriesList</returns>
        public async System.Threading.Tasks.Task<TimeSeriesList> ListTimeSeriesAsync (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string))
        {
             ApiResponse<TimeSeriesList> localVarResponse = await ListTimeSeriesAsyncWithHttpInfo(id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, language, notLanguage, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax, publishedAtStart, publishedAtEnd, period);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List time series The time series endpoint allows you to track information contained in stories over time. This information can be anything from mentions of a topic or entities, sentiment about a topic, or the volume of stories published by a source, to name but a few. The full list of parameters is given below. Using the [Date Math Syntax](https://newsapi.aylien.com/docs/working-with-dates), you can easily set your query to return information from any time period, from the current point in time to when the News API started collecting stories. The returned information can be rounded to a time also specified by you, for example by setting the results into hourly, daily, or weekly data points. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW-7DAYS/DAY&quot;)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional, default to &quot;NOW/DAY&quot;)</param>
        /// <param name="period">The size of each date range is expressed as an interval to be added to the lower bound. It supports Date Math Syntax. Valid options are &#x60;+&#x60; following an integer number greater than 0 and one of the Date Math keywords. e.g. &#x60;+1DAY&#x60;, &#x60;+2MINUTES&#x60; and &#x60;+1MONTH&#x60;. Here are [Supported keywords](https://newsapi.aylien.com/docs/working-with-dates#date-math).  (optional, default to &quot;+1DAY&quot;)</param>
        /// <returns>Task of ApiResponse (TimeSeriesList)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<TimeSeriesList>> ListTimeSeriesAsyncWithHttpInfo (List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?), string publishedAtStart = default(string), string publishedAtEnd = default(string), string period = default(string))
        {

            var localVarPath = "./time_series";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (period != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "period", period)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListTimeSeries", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<TimeSeriesList>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (TimeSeriesList) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(TimeSeriesList)));
        }

        /// <summary>
        /// List trends The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Trends</returns>
        public Trends ListTrends (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?))
        {
             ApiResponse<Trends> localVarResponse = ListTrendsWithHttpInfo(field, id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax);
             return localVarResponse.Data;
        }

        /// <summary>
        /// List trends The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>ApiResponse of Trends</returns>
        public ApiResponse<Trends> ListTrendsWithHttpInfo (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?))
        {
            // verify the required parameter 'field' is set
            if (field == null)
                throw new ApiException(400, "Missing required parameter 'field' when calling DefaultApi->ListTrends");

            var localVarPath = "./trends";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (field != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "field", field)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) this.Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListTrends", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Trends>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Trends) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Trends)));
        }

        /// <summary>
        /// List trends The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Task of Trends</returns>
        public async System.Threading.Tasks.Task<Trends> ListTrendsAsync (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?))
        {
             ApiResponse<Trends> localVarResponse = await ListTrendsAsyncWithHttpInfo(field, id, notId, title, body, text, translationsEnTitle, translationsEnBody, translationsEnText, linksPermalink, notLinksPermalink, language, notLanguage, publishedAtStart, publishedAtEnd, categoriesTaxonomy, categoriesConfident, categoriesId, notCategoriesId, categoriesLevel, notCategoriesLevel, entitiesTitleText, notEntitiesTitleText, entitiesTitleType, notEntitiesTitleType, entitiesTitleLinksDbpedia, notEntitiesTitleLinksDbpedia, entitiesBodyText, notEntitiesBodyText, entitiesBodyType, notEntitiesBodyType, entitiesBodyLinksDbpedia, notEntitiesBodyLinksDbpedia, sentimentTitlePolarity, notSentimentTitlePolarity, sentimentBodyPolarity, notSentimentBodyPolarity, mediaImagesCountMin, mediaImagesCountMax, mediaImagesWidthMin, mediaImagesWidthMax, mediaImagesHeightMin, mediaImagesHeightMax, mediaImagesContentLengthMin, mediaImagesContentLengthMax, mediaImagesFormat, notMediaImagesFormat, mediaVideosCountMin, mediaVideosCountMax, authorId, notAuthorId, authorName, notAuthorName, sourceId, notSourceId, sourceName, notSourceName, sourceDomain, notSourceDomain, sourceLocationsCountry, notSourceLocationsCountry, sourceLocationsState, notSourceLocationsState, sourceLocationsCity, notSourceLocationsCity, sourceScopesCountry, notSourceScopesCountry, sourceScopesState, notSourceScopesState, sourceScopesCity, notSourceScopesCity, sourceScopesLevel, notSourceScopesLevel, sourceLinksInCountMin, sourceLinksInCountMax, sourceRankingsAlexaRankMin, sourceRankingsAlexaRankMax, sourceRankingsAlexaCountry, socialSharesCountFacebookMin, socialSharesCountFacebookMax, socialSharesCountGooglePlusMin, socialSharesCountGooglePlusMax, socialSharesCountLinkedinMin, socialSharesCountLinkedinMax, socialSharesCountRedditMin, socialSharesCountRedditMax);
             return localVarResponse.Data;

        }

        /// <summary>
        /// List trends The trends endpoint allows you to identify the most-mentioned entities, concepts and keywords relevant to your query. For example, this endpoint allows you to set parameters like a time period, a subject category, or an entity, and your request will return the most mentioned entities or keywords that are mentioned in relation to your query. 
        /// </summary>
        /// <exception cref="Aylien.NewsApi.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="field">This parameter is used to specify the trend field. </param>
        /// <param name="id">This parameter is used for finding stories by story id.  (optional)</param>
        /// <param name="notId">This parameter is used for excluding stories by story id.  (optional)</param>
        /// <param name="title">This parameter is used for finding stories whose title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="body">This parameter is used for finding stories whose body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="text">This parameter is used for finding stories whose title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnTitle">This parameter is used for finding stories whose translation title contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnBody">This parameter is used for finding stories whose translation body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="translationsEnText">This parameter is used for finding stories whose translation title or body contains a specific keyword. It supports [boolean operators](https://newsapi.aylien.com/docs/boolean-operators).  (optional)</param>
        /// <param name="linksPermalink">This parameter is used to find stories based on their url.  (optional)</param>
        /// <param name="notLinksPermalink">This parameter is used to exclude stories based on their url.  (optional)</param>
        /// <param name="language">This parameter is used for finding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="notLanguage">This parameter is used for excluding stories whose language is the specified value. It supports [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language codes.  (optional)</param>
        /// <param name="publishedAtStart">This parameter is used for finding stories whose published at time is greater than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="publishedAtEnd">This parameter is used for finding stories whose published at time is less than the specified value. [Here](https://newsapi.aylien.com/docs/working-with-dates) you can find more information about how [to work with dates](https://newsapi.aylien.com/docs/working-with-dates).  (optional)</param>
        /// <param name="categoriesTaxonomy">This parameter is used for defining the type of the taxonomy for the rest of the categories queries. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesConfident">This parameter is used for finding stories whose categories are confident. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional, default to true)</param>
        /// <param name="categoriesId">This parameter is used for finding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesId">This parameter is used for excluding stories by categories id. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="categoriesLevel">This parameter is used for finding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="notCategoriesLevel">This parameter is used for excluding stories by categories level. You can read more about working with categories [here](https://newsapi.aylien.com/docs/working-with-categories).  (optional)</param>
        /// <param name="entitiesTitleText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesTitleLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesTitleLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in story titles. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyText">This parameter is used to find stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyText">This parameter is used to exclude stories based on the specified entities &#x60;text&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyType">This parameter is used to find stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyType">This parameter is used to exclude stories based on the specified entities &#x60;type&#x60; in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="entitiesBodyLinksDbpedia">This parameter is used to find stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="notEntitiesBodyLinksDbpedia">This parameter is used to exclude stories based on the specified entities dbpedia URL in the body of stories. You can read more about working with entities [here](https://newsapi.aylien.com/docs/working-with-entities).  (optional)</param>
        /// <param name="sentimentTitlePolarity">This parameter is used for finding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentTitlePolarity">This parameter is used for excluding stories whose title sentiment is the specified value.  (optional)</param>
        /// <param name="sentimentBodyPolarity">This parameter is used for finding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="notSentimentBodyPolarity">This parameter is used for excluding stories whose body sentiment is the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMin">This parameter is used for finding stories whose number of images is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesCountMax">This parameter is used for finding stories whose number of images is less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMin">This parameter is used for finding stories whose width of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesWidthMax">This parameter is used for finding stories whose width of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMin">This parameter is used for finding stories whose height of images are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesHeightMax">This parameter is used for finding stories whose height of images are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMin">This parameter is used for finding stories whose images content length are greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesContentLengthMax">This parameter is used for finding stories whose images content length are less than or equal to the specified value.  (optional)</param>
        /// <param name="mediaImagesFormat">This parameter is used for finding stories whose images format are the specified value.  (optional)</param>
        /// <param name="notMediaImagesFormat">This parameter is used for excluding stories whose images format are the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMin">This parameter is used for finding stories whose number of videos is greater than or equal to the specified value.  (optional)</param>
        /// <param name="mediaVideosCountMax">This parameter is used for finding stories whose number of videos is less than or equal to the specified value.  (optional)</param>
        /// <param name="authorId">This parameter is used for finding stories whose author id is the specified value.  (optional)</param>
        /// <param name="notAuthorId">This parameter is used for excluding stories whose author id is the specified value.  (optional)</param>
        /// <param name="authorName">This parameter is used for finding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="notAuthorName">This parameter is used for excluding stories whose author full name contains the specified value.  (optional)</param>
        /// <param name="sourceId">This parameter is used for finding stories whose source id is the specified value.  (optional)</param>
        /// <param name="notSourceId">This parameter is used for excluding stories whose source id is the specified value.  (optional)</param>
        /// <param name="sourceName">This parameter is used for finding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="notSourceName">This parameter is used for excluding stories whose source name contains the specified value.  (optional)</param>
        /// <param name="sourceDomain">This parameter is used for finding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="notSourceDomain">This parameter is used for excluding stories whose source domain is the specified value.  (optional)</param>
        /// <param name="sourceLocationsCountry">This parameter is used for finding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCountry">This parameter is used for excluding stories whose source country is the specified value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsState">This parameter is used for finding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsState">This parameter is used for excluding stories whose source state/province is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLocationsCity">This parameter is used for finding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceLocationsCity">This parameter is used for excluding stories whose source city is the specified value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCountry">This parameter is used for finding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCountry">This parameter is used for excluding stories whose source scopes is the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesState">This parameter is used for finding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesState">This parameter is used for excluding stories whose source scopes is the specified state/province value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesCity">This parameter is used for finding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesCity">This parameter is used for excluding stories whose source scopes is the specified city value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceScopesLevel">This parameter is used for finding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="notSourceScopesLevel">This parameter is used for excluding stories whose source scopes is the specified level value. [Here](https://newsapi.aylien.com/docs/working-with-locations) you can find more information about how [to work with locations](https://newsapi.aylien.com/docs/working-with-locations).  (optional)</param>
        /// <param name="sourceLinksInCountMin">This parameter is used for finding stories from sources whose Links in count is greater than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceLinksInCountMax">This parameter is used for finding stories from sources whose Links in count is less than or equal to the specified value. You can read more about working with Links in count [here](https://newsapi.aylien.com/docs/working-with-links-in-count).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMin">This parameter is used for finding stories from sources whose Alexa rank is greater than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaRankMax">This parameter is used for finding stories from sources whose Alexa rank is less than or equal to the specified value. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="sourceRankingsAlexaCountry">This parameter is used for finding stories from sources whose Alexa rank is in the specified country value. It supports [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes. You can read more about working with Alexa ranks [here](https://newsapi.aylien.com/docs/working-with-alexa-ranks).  (optional)</param>
        /// <param name="socialSharesCountFacebookMin">This parameter is used for finding stories whose Facebook social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountFacebookMax">This parameter is used for finding stories whose Facebook social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMin">This parameter is used for finding stories whose Google+ social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountGooglePlusMax">This parameter is used for finding stories whose Google+ social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMin">This parameter is used for finding stories whose LinkedIn social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountLinkedinMax">This parameter is used for finding stories whose LinkedIn social shares count is less than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMin">This parameter is used for finding stories whose Reddit social shares count is greater than or equal to the specified value.  (optional)</param>
        /// <param name="socialSharesCountRedditMax">This parameter is used for finding stories whose Reddit social shares count is less than or equal to the specified value.  (optional)</param>
        /// <returns>Task of ApiResponse (Trends)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Trends>> ListTrendsAsyncWithHttpInfo (string field, List<long> id = default(List<long>), List<long> notId = default(List<long>), string title = default(string), string body = default(string), string text = default(string), string translationsEnTitle = default(string), string translationsEnBody = default(string), string translationsEnText = default(string), List<string> linksPermalink = default(List<string>), List<string> notLinksPermalink = default(List<string>), List<string> language = default(List<string>), List<string> notLanguage = default(List<string>), string publishedAtStart = default(string), string publishedAtEnd = default(string), string categoriesTaxonomy = default(string), bool? categoriesConfident = default(bool?), List<string> categoriesId = default(List<string>), List<string> notCategoriesId = default(List<string>), List<int> categoriesLevel = default(List<int>), List<int> notCategoriesLevel = default(List<int>), List<string> entitiesTitleText = default(List<string>), List<string> notEntitiesTitleText = default(List<string>), List<string> entitiesTitleType = default(List<string>), List<string> notEntitiesTitleType = default(List<string>), List<string> entitiesTitleLinksDbpedia = default(List<string>), List<string> notEntitiesTitleLinksDbpedia = default(List<string>), List<string> entitiesBodyText = default(List<string>), List<string> notEntitiesBodyText = default(List<string>), List<string> entitiesBodyType = default(List<string>), List<string> notEntitiesBodyType = default(List<string>), List<string> entitiesBodyLinksDbpedia = default(List<string>), List<string> notEntitiesBodyLinksDbpedia = default(List<string>), string sentimentTitlePolarity = default(string), string notSentimentTitlePolarity = default(string), string sentimentBodyPolarity = default(string), string notSentimentBodyPolarity = default(string), int? mediaImagesCountMin = default(int?), int? mediaImagesCountMax = default(int?), int? mediaImagesWidthMin = default(int?), int? mediaImagesWidthMax = default(int?), int? mediaImagesHeightMin = default(int?), int? mediaImagesHeightMax = default(int?), int? mediaImagesContentLengthMin = default(int?), int? mediaImagesContentLengthMax = default(int?), List<string> mediaImagesFormat = default(List<string>), List<string> notMediaImagesFormat = default(List<string>), int? mediaVideosCountMin = default(int?), int? mediaVideosCountMax = default(int?), List<int> authorId = default(List<int>), List<int> notAuthorId = default(List<int>), string authorName = default(string), string notAuthorName = default(string), List<int> sourceId = default(List<int>), List<int> notSourceId = default(List<int>), List<string> sourceName = default(List<string>), List<string> notSourceName = default(List<string>), List<string> sourceDomain = default(List<string>), List<string> notSourceDomain = default(List<string>), List<string> sourceLocationsCountry = default(List<string>), List<string> notSourceLocationsCountry = default(List<string>), List<string> sourceLocationsState = default(List<string>), List<string> notSourceLocationsState = default(List<string>), List<string> sourceLocationsCity = default(List<string>), List<string> notSourceLocationsCity = default(List<string>), List<string> sourceScopesCountry = default(List<string>), List<string> notSourceScopesCountry = default(List<string>), List<string> sourceScopesState = default(List<string>), List<string> notSourceScopesState = default(List<string>), List<string> sourceScopesCity = default(List<string>), List<string> notSourceScopesCity = default(List<string>), List<string> sourceScopesLevel = default(List<string>), List<string> notSourceScopesLevel = default(List<string>), int? sourceLinksInCountMin = default(int?), int? sourceLinksInCountMax = default(int?), int? sourceRankingsAlexaRankMin = default(int?), int? sourceRankingsAlexaRankMax = default(int?), List<string> sourceRankingsAlexaCountry = default(List<string>), int? socialSharesCountFacebookMin = default(int?), int? socialSharesCountFacebookMax = default(int?), int? socialSharesCountGooglePlusMin = default(int?), int? socialSharesCountGooglePlusMax = default(int?), int? socialSharesCountLinkedinMin = default(int?), int? socialSharesCountLinkedinMax = default(int?), int? socialSharesCountRedditMin = default(int?), int? socialSharesCountRedditMax = default(int?))
        {
            // verify the required parameter 'field' is set
            if (field == null)
                throw new ApiException(400, "Missing required parameter 'field' when calling DefaultApi->ListTrends");

            var localVarPath = "./trends";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new List<KeyValuePair<String, String>>();
            var localVarHeaderParams = new Dictionary<String, String>(this.Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
            };
            String localVarHttpContentType = this.Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json",
                "text/xml"
            };
            String localVarHttpHeaderAccept = this.Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            if (id != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "id[]", id)); // query parameter
            if (notId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!id[]", notId)); // query parameter
            if (title != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "title", title)); // query parameter
            if (body != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "body", body)); // query parameter
            if (text != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "text", text)); // query parameter
            if (translationsEnTitle != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.title", translationsEnTitle)); // query parameter
            if (translationsEnBody != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.body", translationsEnBody)); // query parameter
            if (translationsEnText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "translations.en.text", translationsEnText)); // query parameter
            if (linksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "links.permalink[]", linksPermalink)); // query parameter
            if (notLinksPermalink != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!links.permalink[]", notLinksPermalink)); // query parameter
            if (language != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "language[]", language)); // query parameter
            if (notLanguage != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!language[]", notLanguage)); // query parameter
            if (publishedAtStart != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.start", publishedAtStart)); // query parameter
            if (publishedAtEnd != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "published_at.end", publishedAtEnd)); // query parameter
            if (categoriesTaxonomy != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.taxonomy", categoriesTaxonomy)); // query parameter
            if (categoriesConfident != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "categories.confident", categoriesConfident)); // query parameter
            if (categoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.id[]", categoriesId)); // query parameter
            if (notCategoriesId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.id[]", notCategoriesId)); // query parameter
            if (categoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "categories.level[]", categoriesLevel)); // query parameter
            if (notCategoriesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!categories.level[]", notCategoriesLevel)); // query parameter
            if (entitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.text[]", entitiesTitleText)); // query parameter
            if (notEntitiesTitleText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.text[]", notEntitiesTitleText)); // query parameter
            if (entitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.type[]", entitiesTitleType)); // query parameter
            if (notEntitiesTitleType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.type[]", notEntitiesTitleType)); // query parameter
            if (entitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.title.links.dbpedia[]", entitiesTitleLinksDbpedia)); // query parameter
            if (notEntitiesTitleLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.title.links.dbpedia[]", notEntitiesTitleLinksDbpedia)); // query parameter
            if (entitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.text[]", entitiesBodyText)); // query parameter
            if (notEntitiesBodyText != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.text[]", notEntitiesBodyText)); // query parameter
            if (entitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.type[]", entitiesBodyType)); // query parameter
            if (notEntitiesBodyType != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.type[]", notEntitiesBodyType)); // query parameter
            if (entitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "entities.body.links.dbpedia[]", entitiesBodyLinksDbpedia)); // query parameter
            if (notEntitiesBodyLinksDbpedia != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!entities.body.links.dbpedia[]", notEntitiesBodyLinksDbpedia)); // query parameter
            if (sentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.title.polarity", sentimentTitlePolarity)); // query parameter
            if (notSentimentTitlePolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.title.polarity", notSentimentTitlePolarity)); // query parameter
            if (sentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "sentiment.body.polarity", sentimentBodyPolarity)); // query parameter
            if (notSentimentBodyPolarity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!sentiment.body.polarity", notSentimentBodyPolarity)); // query parameter
            if (mediaImagesCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.min", mediaImagesCountMin)); // query parameter
            if (mediaImagesCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.count.max", mediaImagesCountMax)); // query parameter
            if (mediaImagesWidthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.min", mediaImagesWidthMin)); // query parameter
            if (mediaImagesWidthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.width.max", mediaImagesWidthMax)); // query parameter
            if (mediaImagesHeightMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.min", mediaImagesHeightMin)); // query parameter
            if (mediaImagesHeightMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.height.max", mediaImagesHeightMax)); // query parameter
            if (mediaImagesContentLengthMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.min", mediaImagesContentLengthMin)); // query parameter
            if (mediaImagesContentLengthMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.images.content_length.max", mediaImagesContentLengthMax)); // query parameter
            if (mediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "media.images.format[]", mediaImagesFormat)); // query parameter
            if (notMediaImagesFormat != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!media.images.format[]", notMediaImagesFormat)); // query parameter
            if (mediaVideosCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.min", mediaVideosCountMin)); // query parameter
            if (mediaVideosCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "media.videos.count.max", mediaVideosCountMax)); // query parameter
            if (authorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "author.id[]", authorId)); // query parameter
            if (notAuthorId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!author.id[]", notAuthorId)); // query parameter
            if (authorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "author.name", authorName)); // query parameter
            if (notAuthorName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "!author.name", notAuthorName)); // query parameter
            if (sourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.id[]", sourceId)); // query parameter
            if (notSourceId != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.id[]", notSourceId)); // query parameter
            if (sourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.name[]", sourceName)); // query parameter
            if (notSourceName != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.name[]", notSourceName)); // query parameter
            if (sourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.domain[]", sourceDomain)); // query parameter
            if (notSourceDomain != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.domain[]", notSourceDomain)); // query parameter
            if (sourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.country[]", sourceLocationsCountry)); // query parameter
            if (notSourceLocationsCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.country[]", notSourceLocationsCountry)); // query parameter
            if (sourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.state[]", sourceLocationsState)); // query parameter
            if (notSourceLocationsState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.state[]", notSourceLocationsState)); // query parameter
            if (sourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.locations.city[]", sourceLocationsCity)); // query parameter
            if (notSourceLocationsCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.locations.city[]", notSourceLocationsCity)); // query parameter
            if (sourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.country[]", sourceScopesCountry)); // query parameter
            if (notSourceScopesCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.country[]", notSourceScopesCountry)); // query parameter
            if (sourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.state[]", sourceScopesState)); // query parameter
            if (notSourceScopesState != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.state[]", notSourceScopesState)); // query parameter
            if (sourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.city[]", sourceScopesCity)); // query parameter
            if (notSourceScopesCity != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.city[]", notSourceScopesCity)); // query parameter
            if (sourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.scopes.level[]", sourceScopesLevel)); // query parameter
            if (notSourceScopesLevel != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "!source.scopes.level[]", notSourceScopesLevel)); // query parameter
            if (sourceLinksInCountMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.min", sourceLinksInCountMin)); // query parameter
            if (sourceLinksInCountMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.links_in_count.max", sourceLinksInCountMax)); // query parameter
            if (sourceRankingsAlexaRankMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.min", sourceRankingsAlexaRankMin)); // query parameter
            if (sourceRankingsAlexaRankMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "source.rankings.alexa.rank.max", sourceRankingsAlexaRankMax)); // query parameter
            if (sourceRankingsAlexaCountry != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("multi", "source.rankings.alexa.country[]", sourceRankingsAlexaCountry)); // query parameter
            if (socialSharesCountFacebookMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.min", socialSharesCountFacebookMin)); // query parameter
            if (socialSharesCountFacebookMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.facebook.max", socialSharesCountFacebookMax)); // query parameter
            if (socialSharesCountGooglePlusMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.min", socialSharesCountGooglePlusMin)); // query parameter
            if (socialSharesCountGooglePlusMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.google_plus.max", socialSharesCountGooglePlusMax)); // query parameter
            if (socialSharesCountLinkedinMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.min", socialSharesCountLinkedinMin)); // query parameter
            if (socialSharesCountLinkedinMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.linkedin.max", socialSharesCountLinkedinMax)); // query parameter
            if (socialSharesCountRedditMin != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.min", socialSharesCountRedditMin)); // query parameter
            if (socialSharesCountRedditMax != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "social_shares_count.reddit.max", socialSharesCountRedditMax)); // query parameter
            if (field != null) localVarQueryParams.AddRange(this.Configuration.ApiClient.ParameterToKeyValuePairs("", "field", field)); // query parameter

            // authentication (app_id) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-ID"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-ID");
            }
            // authentication (app_key) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key")))
            {
                localVarHeaderParams["X-AYLIEN-NewsAPI-Application-Key"] = this.Configuration.GetApiKeyWithPrefix("X-AYLIEN-NewsAPI-Application-Key");
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await this.Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("ListTrends", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<Trends>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Key, x => string.Join(",", x.Value)),
                (Trends) this.Configuration.ApiClient.Deserialize(localVarResponse, typeof(Trends)));
        }

    }
}
