/* 
 * AYLIEN News API
 *
 * The AYLIEN News API is the most powerful way of sourcing, searching and syndicating analyzed and enriched news content. It is accessed by sending HTTP requests to our server, which returns information to your client. 
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@aylien.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = Aylien.NewsApi.Client.OpenAPIDateConverter;

namespace Aylien.NewsApi.Model
{
    /// <summary>
    /// StoryLinks
    /// </summary>
    [DataContract]
    public partial class StoryLinks :  IEquatable<StoryLinks>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StoryLinks" /> class.
        /// </summary>
        /// <param name="canonical">The story canonical URL.</param>
        /// <param name="coverages">The coverages URL.</param>
        /// <param name="permalink">The story permalink URL.</param>
        /// <param name="relatedStories">The related stories URL.</param>
        public StoryLinks(string canonical = default(string), string coverages = default(string), string permalink = default(string), string relatedStories = default(string))
        {
            this.Canonical = canonical;
            this.Coverages = coverages;
            this.Permalink = permalink;
            this.RelatedStories = relatedStories;
        }
        
        /// <summary>
        /// The story canonical URL
        /// </summary>
        /// <value>The story canonical URL</value>
        [DataMember(Name="canonical", EmitDefaultValue=false)]
        public string Canonical { get; set; }

        /// <summary>
        /// The coverages URL
        /// </summary>
        /// <value>The coverages URL</value>
        [DataMember(Name="coverages", EmitDefaultValue=false)]
        public string Coverages { get; set; }

        /// <summary>
        /// The story permalink URL
        /// </summary>
        /// <value>The story permalink URL</value>
        [DataMember(Name="permalink", EmitDefaultValue=false)]
        public string Permalink { get; set; }

        /// <summary>
        /// The related stories URL
        /// </summary>
        /// <value>The related stories URL</value>
        [DataMember(Name="related_stories", EmitDefaultValue=false)]
        public string RelatedStories { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StoryLinks {\n");
            sb.Append("  Canonical: ").Append(Canonical).Append("\n");
            sb.Append("  Coverages: ").Append(Coverages).Append("\n");
            sb.Append("  Permalink: ").Append(Permalink).Append("\n");
            sb.Append("  RelatedStories: ").Append(RelatedStories).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StoryLinks);
        }

        /// <summary>
        /// Returns true if StoryLinks instances are equal
        /// </summary>
        /// <param name="input">Instance of StoryLinks to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StoryLinks input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Canonical == input.Canonical ||
                    (this.Canonical != null &&
                    this.Canonical.Equals(input.Canonical))
                ) && 
                (
                    this.Coverages == input.Coverages ||
                    (this.Coverages != null &&
                    this.Coverages.Equals(input.Coverages))
                ) && 
                (
                    this.Permalink == input.Permalink ||
                    (this.Permalink != null &&
                    this.Permalink.Equals(input.Permalink))
                ) && 
                (
                    this.RelatedStories == input.RelatedStories ||
                    (this.RelatedStories != null &&
                    this.RelatedStories.Equals(input.RelatedStories))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Canonical != null)
                    hashCode = hashCode * 59 + this.Canonical.GetHashCode();
                if (this.Coverages != null)
                    hashCode = hashCode * 59 + this.Coverages.GetHashCode();
                if (this.Permalink != null)
                    hashCode = hashCode * 59 + this.Permalink.GetHashCode();
                if (this.RelatedStories != null)
                    hashCode = hashCode * 59 + this.RelatedStories.GetHashCode();
                return hashCode;
            }
        }
    }

}
